{
  "code": {
    "Java": [
      {
        "name": "Базовые функции 1",
        "program": "public class BubbleSort {\n    public static void bubbleSort(int[] arr) {\n        int n = arr.length;\n        boolean swapped;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j < n - i - 1; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    int temp = arr[j];\n                    arr[j] = arr[j + 1];\n                    arr[j + 1] = temp;\n                }\n            }\n        }\n    }\n}"
      },
      {
        "name": "Базовые функции 2",
        "program": "public class BinarySearch {\n    public static int binarySearch(int[] arr, int target) {\n        int left = 0, right = arr.length - 1;\n        while (left <= right) {\n            int mid = (right + left) / 2;\n            if (arr[mid] == target) {\n                return mid;\n            } else if (arr[mid] < target) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n}"
      }
    ],
    "C++": [
      {
        "name": "Базовые функции 1",
        "program": "void bubbleSort(int arr[], int n){\n    for(int i = 0; i < n - 1; ++i)\n        for(int j = 0; j < n - 1; ++j)\n            if(arr[j] > arr[j + 1])\n                swap(arr[j], arr[j + 1]);\n}"
      },
      {
        "name": "Базовые функции 2",
        "program": "int _Search (int arr[], int key){\n    int l = 0, r = arr.size() - 1;\n    while(r - l > 1){\n        int mid = (l + r) / 2;\n        if(arr[mid] > key) r = mid - 1;\n        else if(arr[mid] < key) l = mid + 1;\n        else return mid;\n    }\n    return -1;\n}"
      }
    ],
    "Python": [
      {
        "name": "Базовые функции 1",
        "program": "def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if arr[j] > arr[j + 1]:\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n    return arr"
      },
      {
        "name": "Базовые функции 2",
        "program": "def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            return mid\n        elif mid_val < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1"
      }
    ]
  }
}